version: 2.1 

parameters:
  namespace:
    default: ""
    type: string
  prod:
    default: false
    type: boolean
  stage:
    default: false
    type: boolean
  file-path:
    default: ""
    type: string
  container-runner-cloud:
    default: ""
    type: boolean

commands:
  envvar-prod:
    steps:
      - run:
          name: echo envvars for prod
          command: |
            echo 'export TF_VAR_client_id="'"${CLIENT_ID}"'"' >> "$BASH_ENV"
            echo 'export TF_VAR_beemoviebot="'"${BEEMOVIEBOT}"'"' >> "$BASH_ENV"
            echo 'export TF_VAR_pterotoken="'"${PteroToken}"'"' >> "$BASH_ENV"
  envvar-stage:
    steps:
      - run:
          name: echo envvars for staging
          command: |
            echo 'export TF_VAR_client_id="'"${CLIENT_ID_STAGING}"'"' >> "$BASH_ENV"
            echo 'export TF_VAR_beemoviebot="'"${BEEMOVIEBOT_STAGING}"'"' >> "$BASH_ENV"
            echo 'export TF_VAR_pterotoken="'"${PteroToken}"'"' >> "$BASH_ENV"
  cloud-container-runner:
      steps:
        - run:
            name: echo envvars for cloud container runner
            command: |
              echo 'export TF_VAR_imlogang_organization_container_runner="'"${IMLOGANG_CONTAINER_RUNNER}"'"' >> "$BASH_ENV"
              echo 'export TF_VAR_logan_container_runner="'"${LOGAN_CONTAINER_RUNNER}"'"' >> "$BASH_ENV"

jobs:
  terraform-plan-prod:
    machine: true 
    resource_class: imlogang-organization-server/ubuntu-k8s
    steps:
      - checkout
      - envvar-prod
      - run:
          name: terraform init
          command: |
            cd Kubernetes/Secrets/beemoviebot
            terraform init
      - run: 
          name: make sure namespace managed
          command: |
            cd Kubernetes/Secrets/beemoviebot
            terraform import kubernetes_namespace.<< pipeline.parameters.namespace >> << pipeline.parameters.namespace >>
      - run: 
          name: terraform plan
          command: |
            cd Kubernetes/Secrets 
            terraform plan -out plan.tf
      - persist_to_workspace:
          root: .
          paths:
            - .

  terraform-plan-stage:
    machine: true 
    resource_class: imlogang-organization-server/ubuntu-k8s
    steps:
      - checkout
      - envvar-stage
      - run:
          name: terraform init
          command: |
            cd Kubernetes/Secrets/beemoviebotstage
            terraform init
      - run: 
          name: make sure namespace managed
          command: |
            cd Kubernetes/Secrets/beemoviebotstage
            terraform import kubernetes_namespace.<< pipeline.parameters.namespace >> << pipeline.parameters.namespace >>
      - run: 
          name: terraform plan
          command: |
            cd Kubernetes/Secrets/beemoviebotstage
            terraform plan -out plan.tf
      - persist_to_workspace:
          root: .
          paths:
            - .
    
  terraform-plan-container-runner-cloud:
    machine: true 
    resource_class: imlogang-organization-server/ubuntu-k8s
    steps:
      - checkout
      - cloud-container-runner
      - run:
          name: terraform init
          command: |
            cd << pipeline.parameters.file-path >>
            terraform init
      - run: 
          name: make sure namespace managed
          command: |
            cd << pipeline.parameters.file-path >>
            terraform import kubernetes_namespace.<< pipeline.parameters.namespace >> << pipeline.parameters.namespace >>
      - run: 
          name: terraform plan
          command: |
            cd << pipeline.parameters.file-path >>
            terraform plan -out plan.tf
      - persist_to_workspace:
          root: .
          paths:
            - .

  terraform-apply:
    machine: true
    resource_class: imlogang-organization-server/ubuntu-k8s
    steps:
      - envvar-prod
      - attach_workspace:
          at: .
      - run:
          name: terraform apply
          command: |
            cd << pipeline.parameters.file-path >>
            terraform apply -auto-approve "plan.tf"

workflows:
  terraform-beemoviebot-prod:
    when: << pipeline.parameters.prod >>
    jobs:
      - terraform-plan-prod:
          context:
            - kubeconfig
            - beemoviebot
      - terraform-apply:
          requires:
            - terraform-plan-stage
          context:
            - kubeconfig
            - beemoviebot
          
  terraform-beemoviebot-stage:
    when: << pipeline.parameters.stage >>
    jobs:
      - terraform-plan-stage:
          context:
            - kubeconfig
            - beemoviebot
      - terraform-apply:
          requires:
            - terraform-plan-stage
          context:
            - kubeconfig
            - beemoviebot
  
  terraform-cloud-container-runner:
    when: << pipeline.parameters.container-runner-cloud >>
    jobs:
      - terraform-plan-container-runner-cloud:
          context:
            - kubeconfig
            - container-runner-cloud
      - terraform-apply:
          requires:
            - terraform-plan-container-runner-cloud
          context:
            - kubeconfig
            - container-runner-cloud