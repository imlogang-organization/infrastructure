version: 2.1
setup: true

default_branch_filtering: &default_branch_filtering
  filters:
    branches:
      only:
        - main

orbs:
  path-filtering: circleci/path-filtering@1.0.0

jobs:
  check_user:
    docker: 
      - image: dockerregistry.logangodsey.com/ubuntu-base:10-20-2024
    resource_class: imlogang-organization-server/small
    steps:
      - run:
          name: Check User
          command: |
            if [[ "$CIRCLE_USERNAME" != "imlogang" ]]; then
              echo "Only Logan can run this"
              exit 1
            fi

  check_lint:
    docker:
      - image: dockerregistry.logangodsey.com/tflint:10-15-2024
    resource_class: imlogang-organization-server/small
    steps:
      - checkout
      - run: 
          name: Run tflint
          command: tflint --recursive --config=/root/project/.tflint.hcl
          
workflows:
  generate-config:
    jobs:
      - check_user
      - check_lint:
          context: tflint-debug
      - path-filtering/filter:
          base-revision: main
          config-path: .circleci/continue_config.yml
          mapping: |
            Kubernetes/Secrets/beemoviebot/.* prod true
            Kubernetes/Secrets/beemoviebot/.* namespace "beemoviebot"
            Kubernetes/Secrets/beemoviebot/.* file-path "Kubernetes/Secrets/beemoviebot"
            Kubernetes/Secrets/beemoviebotstage/.* stage true
            Kubernetes/Secrets/beemoviebotstage/.* namespace "beemoviebotstage"
            Kubernetes/Secrets/beemoviebotstage/.* file-path "Kubernetes/Secrets/beemoviebotstage"
            Kubernetes/Secrets/container-runner-cloud/.* container-runner-cloud true
            Kubernetes/Secrets/container-runner-cloud/.* namespace "circleci"
            Kubernetes/Secrets/container-runner-cloud/.* file-path "Kubernetes/Secrets/container-runner-cloud"
            Kubernetes/Secrets/container-runner-server/.* container-runner-server true
            Kubernetes/Secrets/container-runner-server/.* namespace "container-runner-server"
            Kubernetes/Secrets/container-runner-server/.* file-path "Kubernetes/Secrets/container-runner-server"
            Kubernetes/Secrets/circleci-release-agent-system/.* circleci-release-agent-system true
            Kubernetes/Secrets/circleci-release-agent-system/.* namespace "circleci-release-agent-system"
            Kubernetes/Secrets/circleci-release-agent-system/.* file-path "Kubernetes/Secrets/circleci-release-agent-system"
            minio/.* minio true
            minio/.* file-path "minio"
            AWS/.* aws true
            AWS/.* file-path "AWS"
            cloudflare/cloud.donttrustthecloud/.* cloudflare true
            cloudflare/cloud.donttrustthecloud/.* file-path "cloudflare/cloud.donttrustthecloud"
            cloudflare/com.logangodsey/.* cloudflare true
            cloudflare/com.logangodsey/.* file-path "cloudflare/com.logangodsey"
            Kubernetes/Helm/container-agent/.* container-agent-values-update true
            Kubernetes/Helm/container-agent/.* file-path "Kubernetes/Helm/container-agent"
            Kubernetes/Helm/container-agent/.* namespace "circleci"
            Kubernetes/Secrets/container-agent-gcp-server-upgrade/.* container-agent-gcp-secret-upgrade true
            Kubernetes/Secrets/container-agent-gcp-server-upgrade/.* namespace "cr-upgrade"
            Kubernetes/Secrets/container-agent-gcp-server-upgrade/.* file-path "Kubernetes/Secrets/container-agent-gcp-server-upgrade"
            Kubernetes/Helm/container-agent-gcp-server-upgrade/.* container-agent-gcp-server-upgrade true
            Kubernetes/Helm/container-agent-gcp-server-upgrade/.* namespace "cr-upgrade"
            Kubernetes/Helm/container-agent-gcp-server-upgrade/.* file-path "Kubernetes/Helm/container-agent-gcp-server-upgrade"
            Kubernetes/Helm/container-agent-server/.* container-agent-server-values-update true
            Kubernetes/Helm/container-agent-server/.* namespace "container-runner-server"
            Kubernetes/Helm/container-agent-server/.* file-path "Kubernetes/Helm/container-agent-server"
            docker/docker_host/.* file-path "docker/docker_host"
            docker/docker_host/.* docker_host true
            influxdb/.* influxdb true
            influxdb/.* file-path "influxdb"
            proxmox/proxmox0/.* proxmox0 true
            proxmox/proxmox0/.* file-path "proxmox/proxmox0"
            Kubernetes/Helm/circleci-release-agent-system/.* file-path "Kubernetes/Helm/circleci-release-agent-system"
            Kubernetes/Helm/circleci-release-agent-system/.* namespace "circleci-release-agent-system"
            Kubernetes/Helm/circleci-release-agent-system/.* circleci-release-agent-system-helm true
            Kubernetes/Secrets/go-api/.* file-path "Kubernetes/Secrets/go-api/"
            Kubernetes/Secrets/go-api/.* namespace "go-api"
            Kubernetes/Secrets/go-api/.* go-api true
            Kubernetes/Helm/kong/.* file-path "Kubernetes/Helm/kong"
            Kubernetes/Helm/kong/.* namespace "kong"
            Kubernetes/Helm/kong/.* kong true
            Kubernetes/Secrets/web-ui/.* file-path "Kubernetes/Secrets/web-ui"
            Kubernetes/Secrets/web-ui/.* namespace "web-ui"
            Kubernetes/Secrets/web-ui/.* web-ui true
            Kubernetes/Helm/authentik/.* file-path "Kubernetes/Helm/authentik"
            Kubernetes/Helm/authentik/.* authentik true
            Kubernetes/Helm/authentik/.* namespace "authentik"
            Kubernetes/Helm/grafana-loki/.* file-path "Kubernetes/Helm/grafana-loki"
            Kubernetes/Helm/grafana-loki/.* grafana-loki true
            Kubernetes/Helm/grafana-loki/.* namespace "grafana-loki"
            Kubernetes/Helm/grafana-alloy/.* file-path "Kubernetes/Helm/grafana-alloy"
            Kubernetes/Helm/grafana-alloy/.* grafana-alloy true
            Kubernetes/Helm/grafana-alloy/.* namespace "grafana-alloy"
            Kubernetes/Secrets/grafana-loki/.* file-path "Kubernetes/Secrets/grafana-loki"
            Kubernetes/Secrets/grafana-loki/.* grafana-loki-secrets true
            Kubernetes/Secrets/grafana-loki/.* namespace "grafana-alloy"
          circleci_domain: cciserver.logangodsey.com
          resource_class: imlogang-organization-server/small
          <<: *default_branch_filtering
          requires:
            - check_user
            - check_lint